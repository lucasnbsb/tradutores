/*
 * Generated by classgen, version 1.5
 * 11/10/13 6:18 PM
 */
package node;

public class Anw implements SyntaxNode {

  private SyntaxNode parent;
  public Ausdr ausdr;

  public Anw (Ausdr ausdr) {
    this.ausdr = ausdr;
    if (ausdr != null) ausdr.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (ausdr != null) ausdr.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (ausdr != null) ausdr.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (ausdr != null) ausdr.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Anw(\n");
      if (ausdr != null)
        buffer.append(ausdr.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Anw]");
    return buffer.toString();
  }
}
