/*
 * Generated by classgen, version 1.5
 * 11/10/13 6:18 PM
 */
package node;

public class Dekl_Seq0 extends Dekl_Seq {

  public Dekl dekl;
  public Dekl_Seq dekl_Seq;

  public Dekl_Seq0 (Dekl dekl, Dekl_Seq dekl_Seq) {
    this.dekl = dekl;
    if (dekl != null) dekl.setParent(this);
    this.dekl_Seq = dekl_Seq;
    if (dekl_Seq != null) dekl_Seq.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (dekl != null) dekl.accept(visitor);
    if (dekl_Seq != null) dekl_Seq.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (dekl != null) dekl.traverseTopDown(visitor);
    if (dekl_Seq != null) dekl_Seq.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (dekl != null) dekl.traverseBottomUp(visitor);
    if (dekl_Seq != null) dekl_Seq.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Dekl_Seq0(\n");
      if (dekl != null)
        buffer.append(dekl.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (dekl_Seq != null)
        buffer.append(dekl_Seq.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Dekl_Seq0]");
    return buffer.toString();
  }
}
