/*
 * Generated by classgen, version 1.5
 * 11/26/13 11:02 AM
 */
package node;

public class Prog implements SyntaxNode {

  private SyntaxNode parent;
  public CompilationUnit compilationUnit;

  public Prog (CompilationUnit compilationUnit) {
    this.compilationUnit = compilationUnit;
    if (compilationUnit != null) compilationUnit.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (compilationUnit != null) compilationUnit.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (compilationUnit != null) compilationUnit.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (compilationUnit != null) compilationUnit.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
      if (compilationUnit != null)
        buffer.append(compilationUnit.toString(" "));
      else
        buffer.append(tab+"  null");
    return buffer.toString();
  }
}
