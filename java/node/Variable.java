/*
 * Generated by classgen, version 1.5
 * 11/10/13 6:18 PM
 */
package node;

public class Variable extends Var_Dekl {

  public Typ typ;
  public Id_Seq id_Seq;

  public Variable (Typ typ, Id_Seq id_Seq) {
    this.typ = typ;
    if (typ != null) typ.setParent(this);
    this.id_Seq = id_Seq;
    if (id_Seq != null) id_Seq.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (typ != null) typ.accept(visitor);
    if (id_Seq != null) id_Seq.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (typ != null) typ.traverseTopDown(visitor);
    if (id_Seq != null) id_Seq.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (typ != null) typ.traverseBottomUp(visitor);
    if (id_Seq != null) id_Seq.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Variable(\n");
      if (typ != null)
        buffer.append(typ.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (id_Seq != null)
        buffer.append(id_Seq.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Variable]");
    return buffer.toString();
  }
}
