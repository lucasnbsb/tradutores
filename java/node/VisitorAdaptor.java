/*
 * Generated by classgen, version 1.5
 * 11/26/13 11:02 AM
 */
package node;

public abstract class VisitorAdaptor implements Visitor {

  public void visit(Prog prog) { visit(); }
  public void visit(ClassDeclaration classDeclaration) { visit(); }
  public void visit(ImportStatement importStatement) { visit(); }
  public void visit(Field_var_dec field_var_dec) { visit(); }
  public void visit(PrintStatement printStatement) { visit(); }
  public void visit(BreakStatement breakStatement) { visit(); }
  public void visit(MethodCall methodCall) { visit(); }
  public void visit(ParamCall paramCall) { visit(); }
  public void visit(CodeLiteralStatement codeLiteralStatement) { visit(); }
  public void visit(IfStatement ifStatement) { visit(); }
  public void visit(WhileStatement whileStatement) { visit(); }
  public void visit(Parametro parametro) { visit(); }
  public void visit(VarDefinition varDefinition) { visit(); }
  public void visit(CompilationUnit compilationUnit) { visit(); }
  public void visit(CompilationUnit0 compilationUnit0) { visit(); }
  public void visit(CompilationUnit1 compilationUnit1) { visit(); }
  public void visit(ImportList importList) { visit(); }
  public void visit(ImportList0 importList0) { visit(); }
  public void visit(ImportList1 importList1) { visit(); }
  public void visit(Field_var_declarations field_var_declarations) { visit(); }
  public void visit(Field_var_declarations0 field_var_declarations0) { visit(); }
  public void visit(Field_var_declarations1 field_var_declarations1) { visit(); }
  public void visit(Expression expression) { visit(); }
  public void visit(Expression0 expression0) { visit(); }
  public void visit(Expression1 expression1) { visit(); }
  public void visit(NumericExpression numericExpression) { visit(); }
  public void visit(NumericExpression0 numericExpression0) { visit(); }
  public void visit(NumericExpression1 numericExpression1) { visit(); }
  public void visit(NumericExpression2 numericExpression2) { visit(); }
  public void visit(NumericExpression3 numericExpression3) { visit(); }
  public void visit(LogicalExpression logicalExpression) { visit(); }
  public void visit(LogicalExpression0 logicalExpression0) { visit(); }
  public void visit(LogicalExpression1 logicalExpression1) { visit(); }
  public void visit(LogicalExpression2 logicalExpression2) { visit(); }
  public void visit(LogicalExpression3 logicalExpression3) { visit(); }
  public void visit(StringExpression stringExpression) { visit(); }
  public void visit(StringExpression0 stringExpression0) { visit(); }
  public void visit(StringExpression1 stringExpression1) { visit(); }
  public void visit(StringExpression2 stringExpression2) { visit(); }
  public void visit(Statements statements) { visit(); }
  public void visit(Statements0 statements0) { visit(); }
  public void visit(Statements1 statements1) { visit(); }
  public void visit(Statement statement) { visit(); }
  public void visit(Statement0 statement0) { visit(); }
  public void visit(Statement1 statement1) { visit(); }
  public void visit(Statement2 statement2) { visit(); }
  public void visit(Statement3 statement3) { visit(); }
  public void visit(Statement4 statement4) { visit(); }
  public void visit(Statement5 statement5) { visit(); }
  public void visit(Statement6 statement6) { visit(); }
  public void visit(Statement7 statement7) { visit(); }
  public void visit(Statement8 statement8) { visit(); }
  public void visit(ParamCallList paramCallList) { visit(); }
  public void visit(ParamCallList0 paramCallList0) { visit(); }
  public void visit(ParamCallList1 paramCallList1) { visit(); }
  public void visit(ReturnStatement returnStatement) { visit(); }
  public void visit(ReturnStatement0 returnStatement0) { visit(); }
  public void visit(ReturnStatement1 returnStatement1) { visit(); }
  public void visit(ListParam listParam) { visit(); }
  public void visit(ListParam0 listParam0) { visit(); }
  public void visit(ListParam1 listParam1) { visit(); }
  public void visit(IdentList identList) { visit(); }
  public void visit(IdentList0 identList0) { visit(); }
  public void visit(IdentList1 identList1) { visit(); }
  public void visit(DeclaracaoMetodo declaracaoMetodo) { visit(); }
  public void visit(DeclaracaoMetodo0 declaracaoMetodo0) { visit(); }
  public void visit(DeclaracaoMetodo1 declaracaoMetodo1) { visit(); }
  public void visit(ClassStatement classStatement) { visit(); }
  public void visit(ClassStatement0 classStatement0) { visit(); }
  public void visit(ClassStatement1 classStatement1) { visit(); }
  public void visit(ClassStatements classStatements) { visit(); }
  public void visit(ClassStatements0 classStatements0) { visit(); }
  public void visit(ClassStatements1 classStatements1) { visit(); }

  public void visit() { }

}
